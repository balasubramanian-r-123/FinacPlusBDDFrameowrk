package stepDefinitions;

import io.cucumber.java.en.And;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;
import org.junit.Assert;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import webBase.FinacPlusWebBase;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintStream;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

public class Steps_BookSearch extends FinacPlusWebBase {

    @When("the user clicks on Book Store in the left menu")
    public void theUserClicksOnBookStoreInTheLeftMenu() {
        WebElement bookStoreMenuInLeftPanelLocator = driver.findElement(By.xpath("//*[text()='Book Store']"));
        scrollIntoElementTillVisible(bookStoreMenuInLeftPanelLocator);
        bookStoreMenuInLeftPanelLocator.click();
    }

    @And("the user searches with book name {string}")
    public void theUserSearchesWithBookName(String bookName) {
        WebElement searchBoxLocator = driver.findElement(By.xpath("//*[@id='searchBox']"));
        searchBoxLocator.sendKeys(bookName);
    }

    @Then("the title {string}, Author {string} and Publisher {string} should be displayed")
    public void theTitleAuthorAndPublisherShouldBeDisplayed(String bookTitleName, String authorName, String publisherName) {
        WebElement bookTitleLocator = driver.findElement(By.xpath("//*[text()='Learning JavaScript Design Patterns']"));
        WebElement bookAuthorLocator = driver.findElement(By.xpath("//*[text()='Addy Osmani']"));
        WebElement bookPublisherLocator = driver.findElement(By.xpath("//*[contains(text(),'Reilly Media')]"));
        scrollIntoElementTillVisible(bookTitleLocator);
        Assert.assertEquals(bookTitleLocator.getText(), bookTitleName);
        Assert.assertEquals(bookAuthorLocator.getText(), authorName);
        Assert.assertEquals(bookPublisherLocator.getText(), publisherName);
    }

    @And("these book details are printed in a text file")
    public void theseBookDetailsArePrintedInATextFile() {
        WebElement bookTitleLocator = driver.findElement(By.xpath("//*[text()='Learning JavaScript Design Patterns']"));
        WebElement bookAuthorLocator = driver.findElement(By.xpath("//*[text()='Addy Osmani']"));
        WebElement bookPublisherLocator = driver.findElement(By.xpath("//*[contains(text(),'Reilly Media')]"));
        WebElement bookTitleHeaderLocator = driver.findElement(By.xpath("//*[text()='Title']"));
        WebElement bookAuthorHeaderLocator = driver.findElement(By.xpath("//*[text()='Author']"));
        WebElement bookPublisherHeaderLocator = driver.findElement(By.xpath("//*[text()='Publisher']"));

        String bookTitle = bookTitleLocator.getText();
        String bookAuthor = bookAuthorLocator.getText();
        String bookPublisher = bookPublisherLocator.getText();
        String bookTitleHeader = bookTitleHeaderLocator.getText();
        String bookAuthorHeader = bookAuthorHeaderLocator.getText();
        String bookPublisherHeader = bookPublisherHeaderLocator.getText();

        LocalDateTime localDateTime = LocalDateTime.now();
        DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");
        String formattedDate = localDateTime.format(dateTimeFormatter);

        try {
            PrintStream printStream = new PrintStream(new File("BookDetails.txt")); // When the code is executed, it will generate a txt file in the project path itself
            System.setOut(printStream);
            printStream.println("This file is automatically generated on runtime on: " + formattedDate);
            printStream.println(bookTitleHeader + ": " + bookTitle);
            printStream.println(bookAuthorHeader + ": " + bookAuthor);
            printStream.print(bookPublisherHeader + ": " + bookPublisher);
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
    }

    @When("the user clicks on Log Out button")
    public void theUserClicksOnLogOutButton() {
        WebElement logOutButtonLocator = driver.findElement(By.xpath("//button[text()='Log out']"));
        scrollIntoElementTillVisible(logOutButtonLocator);
        logOutButtonLocator.click();
    }

    @Then("the homepage should be displayed")
    public void theHomepageShouldBeDisplayed() {
        WebElement loginPageHeader = driver.findElement(By.xpath("//h1[text()='Login']"));
        Assert.assertEquals(loginPageHeader.getText(), "Login");
    }
}